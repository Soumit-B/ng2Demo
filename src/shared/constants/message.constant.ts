import { Injectable } from '@angular/core';

@Injectable()
export class MessageConstant {
    public static Message =
    {
        SavedSuccessfully: 'Record Saved Successfully',
        SaveUnSuccessful: 'Record Saved Unsuccessful',
        ConfirmRecord: 'Confirm Record?',
        CancelRecord: 'Cancel Record?',
        ConfirmProcessing: 'Confirm Processing',
        DeleteRecord: 'Delete Record?',
        TrialSwitchedOff: 'Trial Period Switched Off',
        SaveContractAddressAsAccountAddress: 'Save contract address as account address?',
        specialInstructions: 'Special Instructions',
        noSpecialInstructions: 'No Special Instructions',
        dateSelectionWarning: 'Start Date cannot be greater than End Date',
        GeneralError: 'General error occurred during processing',
        SaveError: 'Error occurred during save',
        DeleteError: 'Error occurred during delete',
        NoSpecialCharecter: 'No Special Character',
        PermissionDenied: 'Permission Denied',
        RecordDeleted: 'Record Deleted Successfully',
        programNameAndDescRequired: 'Please Enter both Program name and Description!',
        assignAllApicodeConfirm: 'This will assign the chosen API code to all the selected Service Covers. Continue?',
        assignClearAllApicodeConfirm: 'This will clear all manually assigned API codes on the current selection. Continue?',
        programNameAndUserCodeRequired: 'Please Enter both Program name and User code!',
        noRecordFound: 'Record Not Found',
        RecordNotFound: 'Record Not Found',
        recordNotFound: 'Record Not Found',
        validprogramNameAndUserCodeRequired: 'Please Enter valid Program name and User code!',
        productNotRequired: 'Product Does Not Require Manual Visit Planning',
        VisitTypeNotSet: 'The default Call Out visit type has not been setup!',
        RecordSavedSuccessfully: 'Record Saved Successfully',
        RecordDeletedSuccessfully: 'Record Deleted Successfully',
        Information: 'Information',
        BICNotRegistered: 'BICNumber not registered in system',
        CountryNLNotMatch: 'Country code must be NL',
        noRecordSelected: 'No record is selected.',
        OldAppointmentExistsQues: 'An open appointment exists for this Prospect. Do you want to close it now?',
        OldAppointmentExistsTitle: 'Open Diary Appointments Exist',
        DiaryAppointmentRequiredTitle: 'Diary Appointment Required',
        DiaryAppointmentRequiredQues: 'You must enter a Diary Appointment before you can enter Sales Quotes. Do you want to go to the Diary now?',
        ConfirmTitle: 'Confirm',
        SuccessTitle: 'Success',
        ErrorTitle: 'Error',
        WarningTitle: 'Warning',
        MessageTitle: 'Message',
        NoData: 'No data to show!',
        RouteAway: 'There are unsaved changes. Are you sure you want to move away?',
        DirtyCheck: 'There are unsaved changes. Ready to confirm?',
        PageNotCovered: 'Page not covered!',
        PageNotDeveloped: 'Page is not developed',
        RestrictedMode: 'Request Restricted, Return To Normal Mode First',
        SignOutMessage: 'Are you sure you want to sign out?',
        SignOutUnsavedMessage: 'Any unsaved changes made will be lost if you continue.',
        PerformingATermination: 'You are about to Submit a Contract Termination. Are you sure?',
        AnopenWorkOrderexists: 'An open WorkOrder exists. Do you want to close it now?',
        PhotographicEvidence: 'Do you have Photographic Evidence of the problem?',
        Cancel: 'Cancel'
    };
    public static PageSpecificMessage = {
        cmdClearAcct: 'Clear Account Details',
        cmdCreateNew: 'Create Ticket (New Customer)',
        cmdCreateExist: 'Create Ticket (Existing Account)',
        cmdContactAcct: 'From Account',
        cmdContactProspect: 'From Prospect',
        cmdRestoreAcct: 'Restore Account Details',
        contactInformation: 'Contact Information',
        invoiceReasonCodeAbsentError: 'A reason code must be entered if Re-Invoice is selected',
        unableToGeocode: 'Unable to Geocode Address',
        pestNetOnlineBlank: 'PestNetOnline Site Reference Is Blank. Please Complete if Existing PestNetOnline Site.',
        Please_ensure_that_you_have_verified_the_prospect_details_before_proceeding: 'Please ensure that you have verified the prospect details before proceeding',
        changesToPremiseAddress: 'Changes made to Premises Address Information will not affect invoicing.',
        Error_month_year: 'Error - Unable to calculate month && year',
        addPremiseTitle: 'Would You Like To Add Premise Locations?',
        addPremiseContent: 'Add Premise Locations?',
        AccessErrMsg: 'The access to time cannot be less than or equal to the access from time',
        DateErrMsg: 'The to date cannot be less than the from date',
        ServiceAdjHrs: 'The Service Adjustment Hours cannot be greater than 2',
        ServiceAdjMins: 'The Service Adjustment Minutes cannot be greater than 59',
        PremiseType: 'The Premise Type can only be either NS or SS',
        ProofOfServFax: 'The Proof of Service method by fax must be Y or left blank',
        PosFax: 'The Proof of Service fax number must be 10 digits long',
        PosFaxChar: 'The Proof of Service fax number cannot have a character in it',
        ProofOfServSMS: 'The Proof of Service method by SMS must be Y or left blank',
        PosSMS: 'The Proof of Service SMS number must be 10 digits long',
        PosSMSChar: 'The Proof of Service SMS number cannot have a character in it',
        ProofOfServEmail: 'The Proof of Service method by email must be Y or left blank',
        PosEmail: 'The Proof of Service email address cannot be left blank if (it is chosen as a proof of service method )',
        EmailInvalid: 'The email address is invalid',
        NotifyFax: 'The Notify of Service method by fax must be Y or left blank',
        NotifyFax10: 'The Notify of Service fax number must be 10 digits long',
        NotifyFaxChar: 'The Notify of Service fax number cannot have a character in it',
        NotifySMS: 'The Notify of Service method by SMS must be Y or left blank',
        NotifySMS10: 'The Notify of Service SMS number must be 10 digits long',
        NotifySMSChar: 'The Notify of Service SMS number cannot have a character in it',
        NotifyPhone: 'The Notify of Service method by Phone must be Y or left blank',
        NotifyPhone10: 'The Notify of Service Phone number must be 10 digits long',
        NotifyPhoneChar: 'The Notify of Service Phone number cannot have a character in it',
        NotifyEmail: 'The Notify of Service method by email must be Y or left blank',
        NotifyEmailBlank: 'The Notify of Service email address cannot be left blank if (it is chosen as a proof of service method )',
        NotifyDaysBefore14: 'The Notify of days before service cannot be greater than 14',
        NotifyDaysBefore0: 'The Notify of days before service cannot be less than 0',
        AllowAllTasks: 'The allow all tasks field must be either Y or blank',
        TechAddOnce: 'A tech can be added only once',
        CurrentDateError: 'Date must be in the currently selected year (',
        SuburbPostCode: 'The suburb, state and postcode do not match',
        Product_Code_Is_Required: 'Product Code Is Required.',
        Visit_Frequency_Is_Required: 'Visit Frequency Is Required.',
        Effective_Date_Is_Required: 'Effective Date Is Required.',
        Service_Commence_Date_Is_Required: 'Service Commence Date Is Required.',
        Hard_Slot_Type_Is_Required: 'Hard-Slot Type Is Required',
        Changes_made_to_Account_Address_Information_will_not_affect_invoicing: 'Changes made to Account Address Information will not affect invoicing.',
        The_suburb_state_and_postcode_do_not_match: 'The suburb, state and postcode do not match',
        UpdateComplete: 'Update Complete',
        This_will_update_the_existing_SEPA_Mandate_Reference: 'This will update the existing SEPA Mandate Reference. Are you sure you want to continue?',
        Confirm_Generate_New: 'Confirm Generate New',
        ExpectedAndActualDoNotMatch: 'Expected Totals And Actual Totals Do Not Match',
        AddProductSales: 'Are you sure you want to add Product Sales?',
        CallbackRequired: 'Call Back Required?',
        CallbackFuture: 'Does The Customer Want Us To Call Back For A Future Order?',
        msg2517: 'WARNING: Units Are Still In \'Holding Location\' For This Service Cover - Use TRANSFER option',
        msg2668: 'WARNING: This Visit Has Visit Detail',
        colorMisMatch: 'You Can Not Have The Font Colour The Same As The Background Colour',
        ERRORS_ON_PAGE_PROSPECT_NUMBER: 'Error(s) on Page - Prospect number is empty',
        proceedMsg: 'Are you sure you want to proceed?',
        unallocatedWarning: 'Unallocated Units Have Been Assigned To Holding Location',
        exportedFile: 'Exported. File sent as Email.',
        blankOutTeam: 'Blank out Team?',
        blankOutEmail: 'Blank out Email?',
        blankOutSMS: 'Blank out SMS?',
        blankOutGroup: 'Blank out Notification Group?',
        vEnableGeneralSearchToUseMatchesTrue: 'Name, group account name, address and telephone searches now use wildcards. It is possible to search for a name matching *FRE*, which will pick up Alfred, Fred etc.',
        vEnableGeneralSearchToUseMatchesFalse: 'Name. group account name and address searches now use wildcards. If you wish to search for a name that begins FRE you must now enter FRE*',
        vbDurationMinutes: 'Minutes Entered Cannot Be Greater Than 59',
        areYouSure: 'Are you sure?',
        employeeCommentLength: 'Comments field is too long. The maximum length is 2000 characters.',
        workListPlanning: 'Work List Contains Plans That Are In Planning. Do You Wish To Continue?',
        doYouWishToContinue: 'Do you wish to continue?',
        createFixedJob: 'About To Create Fixed Price Job',
        massPriceChangeGridAtleastOne: 'At Least One Of The Following Fields Must Be Populated - Group, Account, Or Contract',
        massPriceChangeGridProductMandatory: 'You Are Running Mass Price Change by Unit Price, you Must Enter A Product Code',
        massPriceChangeGridUpdateWithError: 'Update Complete, But With Error(s)',
        massPriceChangeGridUpdateProcess: 'Update Process',
        massPriceChangeGridUpdateComplete: 'Update Complete',
        cannotPlanACancelledVisit: 'Cannot Plan A Cancelled Visit',
        massPriceChangeGridPasswordProcess: 'Please Enter Your User Password And Click The Confirm Button To Process The Update',
        seServicePlanningGrid: {
            iui7808DateCheckError: 'Plan End Date Must Not Be Over 7 Days Greater Than The Start Date',
            iui7808CompareWeekNumber: 'Start And End Date Must Be In The Same Week',
            iui7808Msg1: 'Plan Week Has Already Passed',
            iui7808Msg2: 'End Date Must Not Be Before Start Date',
            undoSelectionConfirm: 'This Will Undo All Plans Selected For The Current Selection. Do You Wish To Continue?',
            planWeekPassed: 'Plan Week Has Already Passed',
            hideFilters: 'Hide Filters',
            showFilters: 'Show Filters',
            defaultAppointments: 'Default Appointments',
            defaultRoutines: 'Default Routines'
        },
        msgSharedVisit: 'This is a Shared Visit. Please make sure you Delete all the Shared Visits Connected to this Visit ',
        notSuccessfull: 'not successful!!',
        msgVisitMnt: 'Visit Maintenance',
        WildcardSearch: 'Wildcard Search',
        marktSelectSearchMessage: [
            'Insufficient search parameters',
            'Must be one of the following combinations:',
            '* Company Name + Postcode ',
            '* Company Name + Town ',
            '* Postcode  ',
            '* Postcode + House Number',
            '* Town + Street Name + House Number',
            '* Telephone Number',
            '* Chamber of Commerce Number',
            '* MarktSelect Key'
        ],
        invoiceRunDatePrint2: {
            selectLayout: 'Please Select A Layout',
            selectOnlyOneLayout: 'Only One Layout Can Be Selected'
        }
    };
}
